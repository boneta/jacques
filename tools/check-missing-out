#!/usr/bin/env python3

# Description: Check missing values from an OUT file
# Last update: 21-04-2022

import argparse
import sys

import numpy as np

from jacques.queues import QueueManager


if __name__ == '__main__':

    # parser
    parser = argparse.ArgumentParser(prog='check-missing-out',
                                     description='check missing values from an OUT file')
    parser.add_argument('-o', metavar='.out', type=str, required=True,
                        help='output file from DYNAMON')
    parser.add_argument('-n', metavar='#', type=int, nargs='+',
                        help='upper index extremes to check (def: 0-max)')
    parser.add_argument('-j', metavar='.job', type=str,
                        help='re-launch array of missing values from jobfile if any found')
    parser.add_argument('--dry', action='store_true',
                        help='dry run, print command but do not launch')
    args = parser.parse_args()

    out_file = args.o
    ndx      = args.n
    jobfile  = args.j
    dry      = args.dry

    # read out file
    out_data = np.loadtxt(out_file, dtype=float, comments='#')

    # guess dimension (number of columns)
    #   X  #  DIST  Etot  Eqm  INDX  DIST_REF
    if out_data.shape[1] == 5:
        dim = 1
    elif out_data.shape[1] == 8:
        dim = 2
    else:
        sys.exit("ERROR: Inconsistent dimension of output file")

    # find missing values
    if dim == 1:
        out_data = out_data[out_data[:, 3].argsort()]
        ndx = (0, max(out_data[:, 3])) if ndx is None else (0, ndx[0])
        missing_array = set(np.arange(ndx[0], ndx[1]+1)) - set(out_data[:, 3])
        missing_array = [str(int(i)) for i in missing_array]

    elif dim == 2:
        raise NotImplementedError("2D not implemented yet")

    # print results and launch jobfile
    if len(missing_array) == 0:
        print("OK! No missing values found")
    else:
        print(f"Missing array:  {', '.join(missing_array)}")
        if jobfile:
            qmanager = QueueManager()
            if qmanager.manager == 'slurm':
                qmanager.submit(jobfile, f"--array={','.join(missing_array)}", dry)
            elif qmanager.manager == 'sge':
                for n in missing_array:
                    qmanager.submit(jobfile, f"-t {n}-{n}", dry)
            else:
                sys.exit("ERROR: Could not launch. Queue manager not supported/found.")
